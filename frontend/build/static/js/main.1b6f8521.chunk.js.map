{"version":3,"sources":["logo1.jpg","components/create-todo.component.js","components/edit-todo.component.js","components/todos-list.component.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","CreateTodo","props","onChangeTodoDescription","bind","onChangeTodoResponsible","onChangeTodoPriority","onSubmit","state","todo_description","todo_responsible","todo_priority","todo_completed","e","this","setState","target","value","preventDefault","console","log","newTodo","axios","post","then","res","data","style","marginTop","className","type","onChange","name","id","checked","Component","EditTodo","onChangeTodoCompleted","get","match","params","response","catch","error","obj","history","push","htmlFor","Todo","todo","to","_id","TodosList","todos","err","map","currentTodo","i","key","todoList","App","href","rel","src","logo","width","height","alt","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1b6f8521.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo1.8cb05261.jpg\";","import React, {Component} from 'react';\nimport { isFlowBaseAnnotation } from '@babel/types';\nimport axios from 'axios'\nexport default class CreateTodo extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.onChangeTodoDescription = this.onChangeTodoDescription.bind(this)\n        this.onChangeTodoResponsible = this.onChangeTodoResponsible.bind(this)\n        this.onChangeTodoPriority = this.onChangeTodoPriority.bind(this)\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n            todo_description: '',\n            todo_responsible: '',\n            todo_priority: '',\n            todo_completed: false\n        }\n    }\n\n    onChangeTodoDescription(e){\n        this.setState({\n            todo_description: e.target.value\n        });\n    }\n    onChangeTodoResponsible(e){\n        this.setState({\n            todo_responsible: e.target.value\n        });\n    }\n    onChangeTodoPriority(e){\n        this.setState({\n            todo_priority: e.target.value\n        });\n    }\n\n    onSubmit(e){\n        e.preventDefault();\n\n        console.log(`Form Submitted:`)\n        console.log(`Todo Description: ${this.state.todo_description}`)\n        console.log(`Todo Responsible: ${this.state.todo_responsible}`)\n        console.log(`Todo Priority: ${this.state.todo_priority}`)\n        console.log(`Todo Completed: ${this.state.todo_completed}`)\n\n        const newTodo = {\n            todo_description: this.state.todo_description,\n            todo_responsible: this.state.todo_responsible,\n            todo_priority: this.state.todo_priority,\n            todo_completed: this.state.todo_completed\n        }\n\n        axios.post('http://localhost:4000/todos/add', newTodo)\n            .then(res =>\n                console.log(res.data))\n\n\n        this.setState({\n            todo_description: '',\n            todo_responsible: '',\n            todo_priority: '',\n            todo_completed: false\n        })\n    }\n\n\n\n    render(){\n        return(\n            <div style={{marginTop: 20}}>\n                <h3>Create New Todo</h3>\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\">\n                        <label>Description</label>\n                        <input type=\"text\" \n                        className=\"form-control\" \n                        value={this.state.todo_description} \n                        onChange={this.onChangeTodoDescription}/>\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Responsible</label>\n                        <input type=\"text\" \n                        className=\"form-control\" \n                        value={this.state.todo_responsible} \n                        onChange={this.onChangeTodoResponsible}/>\n                    </div>\n                    <div className=\"form-group\">\n                        <div className=\"form-check form-check-inline\">\n                            <input className=\"form-check-input\"\n                            type=\"radio\"\n                            name=\"priorityOptions\"\n                            id=\"priorityLow\"\n                            value=\"Low\"\n                            checked={this.state.todo_priority==='Low'}\n                            onChange={this.onChangeTodoPriority}\n                            />\n                        <label className=\"form-check-label\">Low</label>\n\n                        </div>\n                        <div className=\"form-check form-check-inline\">\n                            <input className=\"form-check-input\"\n                            type=\"radio\"\n                            name=\"priorityOptions\"\n                            id=\"priorityMedium\"\n                            value=\"Medium\"\n                            checked={this.state.todo_priority==='Medium'}\n                            onChange={this.onChangeTodoPriority}\n                            />\n                        <label className=\"form-check-label\">Medium</label>\n                        </div>\n                        <div className=\"form-check form-check-inline\">\n                            <input className=\"form-check-input\"\n                            type=\"radio\"\n                            name=\"priorityOptions\"\n                            id=\"priorityHigh\"\n                            value=\"High\"\n                            checked={this.state.todo_priority==='High'}\n                            onChange={this.onChangeTodoPriority}\n                            />\n                        <label className=\"form-check-label\">High</label>\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <input type = \"submit\" value= \"Create Todo\" className = \"btn btn-primary\"/>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport axios from 'axios';\n\nexport default class EditTodo extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.onChangeTodoDescription = this.onChangeTodoDescription.bind(this);\n        this.onChangeTodoResponsible = this.onChangeTodoResponsible.bind(this);\n        this.onChangeTodoPriority = this.onChangeTodoPriority.bind(this);\n        this.onChangeTodoCompleted = this.onChangeTodoCompleted.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            todo_description: '',\n            todo_responsible: '',\n            todo_priority: '',\n            todo_completed: false\n        }\n    }\n\n    componentDidMount() {\n        axios.get('http://localhost:4000/todos/'+this.props.match.params.id)\n            .then(response => {\n                this.setState({\n                    todo_description: response.data.todo_description,\n                    todo_responsible: response.data.todo_responsible,\n                    todo_priority: response.data.todo_priority,\n                    todo_completed: response.data.todo_completed\n                })\n            })\n            .catch(function(error) {\n                console.log(error)\n            })\n    }\n\n    onChangeTodoDescription(e) {\n        this.setState({\n            todo_description: e.target.value\n        });\n    }\n\n    onChangeTodoResponsible(e) {\n        this.setState({\n            todo_responsible: e.target.value\n        });\n    }\n\n    onChangeTodoPriority(e) {\n        this.setState({\n            todo_priority: e.target.value\n        });\n    }\n\n    onChangeTodoCompleted(e) {\n        this.setState({\n            todo_completed: !this.state.todo_completed\n        });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const obj = {\n            todo_description: this.state.todo_description,\n            todo_responsible: this.state.todo_responsible,\n            todo_priority: this.state.todo_priority,\n            todo_completed: this.state.todo_completed\n        };\n        axios.post('http://localhost:4000/todos/update/'+this.props.match.params.id, obj)\n            .then(res => console.log(res.data));\n\n        this.props.history.push('/');\n    }\n\n    render() {\n        return (\n            <div>\n                <h3>Update Todo</h3>\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\">\n                        <label>Description: </label>\n                        <input  type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.todo_description}\n                                onChange={this.onChangeTodoDescription}\n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Responsible: </label>\n                        <input  type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.todo_responsible}\n                                onChange={this.onChangeTodoResponsible}\n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <div className=\"form-check form-check-inline\">\n                            <input  className=\"form-check-input\"\n                                    type=\"radio\"\n                                    name=\"priorityOptions\"\n                                    id=\"priorityLow\"\n                                    value=\"Low\"\n                                    checked={this.state.todo_priority==='Low'}\n                                    onChange={this.onChangeTodoPriority}\n                                    />\n                            <label className=\"form-check-label\">Low</label>\n                        </div>\n                        <div className=\"form-check form-check-inline\">\n                            <input  className=\"form-check-input\"\n                                    type=\"radio\"\n                                    name=\"priorityOptions\"\n                                    id=\"priorityMedium\"\n                                    value=\"Medium\"\n                                    checked={this.state.todo_priority==='Medium'}\n                                    onChange={this.onChangeTodoPriority}\n                                    />\n                            <label className=\"form-check-label\">Medium</label>\n                        </div>\n                        <div className=\"form-check form-check-inline\">\n                            <input  className=\"form-check-input\"\n                                    type=\"radio\"\n                                    name=\"priorityOptions\"\n                                    id=\"priorityHigh\"\n                                    value=\"High\"\n                                    checked={this.state.todo_priority==='High'}\n                                    onChange={this.onChangeTodoPriority}\n                                    />\n                            <label className=\"form-check-label\">High</label>\n                        </div>\n                        <div className=\"form-check\">\n                            <input  type=\"checkbox\"\n                                    className=\"form-check-input\"\n                                    id=\"completedCheckbox\"\n                                    name=\"completedCheckbox\"\n                                    onChange={this.onChangeTodoCompleted}\n                                    checked={this.state.todo_completed}\n                                    value={this.state.todo_completed}\n                                    />\n                            <label className=\"form-check-label\" htmlFor=\"completedCheckbox\">\n                                Completed\n                            </label>\n                        </div>\n                        <br/>\n                        <div className=\"form-group\">\n                            <input type=\"submit\" value=\"Update Todo\" className=\"btn btn-primary\" />\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\n\n\nconst Todo = props => (\n    <tr>\n        <td className={props.todo.todo_completed ? 'completed' : ''}>{props.todo.todo_description}</td>\n        <td className={props.todo.todo_completed ? 'completed' : ''}>{props.todo.todo_responsible}</td>\n        <td className={props.todo.todo_completed ? 'completed' : ''}>{props.todo.todo_priority}</td>\n        <td>\n            <Link to={\"/edit/\"+props.todo._id}>Edit</Link>\n        </td>\n    </tr>\n)\n\nexport default class TodosList extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {todos: []};\n    }\n\n    componentDidMount(){\n        axios.get('http://localhost:4000/todos/')\n            .then(response=>{\n                this.setState({todos: response.data}) \n            })\n            .catch((err)=>{\n                console.log(err)\n            })\n    }\n\n    componentDidUpdate(){\n        axios.get('http://localhost:4000/todos/')\n            .then(response=>{\n                this.setState({todos: response.data})\n            })\n            .catch((err)=>{\n                console.log(err)\n            })\n    }\n\n\n    todoList(){\n        return this.state.todos.map((currentTodo, i)=>{\n            return <Todo todo={currentTodo} key={i}/>\n        })\n    }\n\n\n    render(){\n        return(\n            <div>\n                <h3>Todos List:</h3>\n                <table className=\"table table-striped\" style={{ marginTop:20 }}>\n                    <thead>\n                        <tr>\n                            <th>Description</th>\n                            <th>Responsible</th>\n                            <th>Priority</th>\n                            <th>Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        { this.todoList()}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport {BrowserRouter as Router,Route,Link} from \"react-router-dom\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\nimport CreateTodo from \"./components/create-todo.component\";\nimport EditTodo from \"./components/edit-todo.component\"\nimport TodosList from \"./components/todos-list.component\"\n\nimport logo from \"./logo1.jpg\"\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"container\">\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <a className=\"navbar-brand\" href=\"https://codingthesmartway.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img src={logo} width=\"60\" height=\"60\" alt=\"codingthesmartway.com\"/>\n        </a>\n        <Link to=\"/\" className=\"navbar-brand\">MERN-Stack Todo App</Link>\n        <div className=\"collapse navbar-collapse\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"navbar-item\">\n              <Link to=\"/\" className=\"nav-link\">TODOS</Link>\n            </li>\n            <li className=\"navbar-item\">\n              <Link to=\"/create\" className=\"nav-link\">Create Todo</Link>\n            </li>\n\n          </ul>\n        </div>\n      </nav>\n\n\n\n\n      <Route path=\"/\" exact component={TodosList}/>\n      <Route path=\"/edit/:id\" component={EditTodo}/>\n      <Route path=\"/create\" component={CreateTodo}/>\n    </div>\n    \n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}